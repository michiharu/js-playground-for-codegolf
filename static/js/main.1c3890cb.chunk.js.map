{"version":3,"sources":["const/ast.ts","func/util.ts","PlayGround.tsx","routes.ts","codes/circle-code.ts","codes/digital-clock-code.ts","LeftMenu.tsx","App.tsx","theme.tsx","index.tsx"],"names":["checkTime","milliseconds","sec","toFixed","timeLimitErrorMsg","type","test","operator","left","callee","computed","object","name","property","optional","arguments","right","value","raw","consequent","body","argument","alternate","esprima","require","execCode","code","args","options","timeLimit","status","Function","funcString","startFunc","ast","parseScript","attached","estraverse","replace","enter","node","blockStatement","escodegen","generate","format","indent","style","slice","length","attachInfiniteLoopChecker","error","console","String","useStyles","makeStyles","theme","createStyles","inputRoot","correct","borderColor","lightGreen","A400","CssTextField","withStyles","root","paddingBottom","TextField","BoxBelowTextfield","props","Box","position","width","height","bottom","px","pt","bgcolor","borderRadius","display","justifyContent","children","defaultPlayGroundSettings","fps","PlayGround","classes","page","init","origin","useState","setSettings","split","filter","_","i","arr","map","line","join","viewCode","setCode","Date","setNow","useEffect","log","timer","window","setInterval","clearInterval","isValid","isCorrect","len","s","charCodeAt","getByteLen","checkbox","Checkbox","checked","onChange","e","p","flexDirection","mb","label","variant","inputProps","textAlign","Number","target","ml","FormControlLabel","control","Grow","in","Grid","container","spacing","item","xs","lg","rows","multiline","fullWidth","spellCheck","Typography","align","className","undefined","pages","icon","CircleIcon","res","y","x","Math","sqrt","pow","w","h","DigitalClockIcon","now","getHours","getMinutes","getSeconds","ListItemLink","primary","to","renderLink","React","useMemo","forwardRef","itemProps","ref","ListItem","button","component","ListItemIcon","ListItemText","LeftMenu","List","Icon","key","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","padding","App","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","CssBaseline","AppBar","Toolbar","IconButton","color","aria-label","edge","onClick","noWrap","Hidden","mdUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","smDown","path","createMuiTheme","typography","fontFamily","palette","main","secondary","red","background","default","MuiTextField","ReactDOM","render","basename","process","ThemeProvider","document","querySelector"],"mappings":"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","file":"static/js/main.1c3890cb.chunk.js","sourcesContent":["import * as ESTree from \"estree\";\n\nexport const loopStatements: ESTree.Node[\"type\"][] = [\n  \"ForStatement\",\n  \"DoWhileStatement\",\n  \"WhileStatement\",\n  \"ForInStatement\",\n  \"ForOfStatement\",\n];\n\nexport const checkTime = (milliseconds: number): ESTree.Statement => {\n  const sec = (milliseconds / 1000).toFixed(2);\n  const timeLimitErrorMsg = `TimeLimitError: The execution time has exceeded ${sec} seconds.`;\n  return {\n    type: \"IfStatement\",\n    test: {\n      type: \"BinaryExpression\",\n      operator: \">\",\n      left: {\n        type: \"BinaryExpression\",\n        operator: \"-\",\n        left: {\n          type: \"CallExpression\",\n          callee: {\n            type: \"MemberExpression\",\n            computed: false,\n            object: { type: \"Identifier\", name: \"performance\" },\n            property: { type: \"Identifier\", name: \"now\" },\n            optional: false,\n          },\n          arguments: [],\n          optional: false,\n        },\n        right: { type: \"Identifier\", name: \"__start\" },\n      },\n      right: { type: \"Literal\", value: milliseconds, raw: `${milliseconds}` },\n    },\n    consequent: {\n      type: \"BlockStatement\",\n      body: [\n        {\n          type: \"ThrowStatement\",\n          argument: {\n            type: \"CallExpression\",\n            callee: { type: \"Identifier\", name: \"Error\" },\n            arguments: [\n              {\n                type: \"Literal\",\n                value: timeLimitErrorMsg,\n                raw: `\"${timeLimitErrorMsg}\"`,\n              },\n            ],\n            optional: false,\n          },\n        },\n      ],\n    },\n    alternate: null,\n  };\n};\n\nexport default { checkTime };\n","import estraverse from \"estraverse\";\nimport escodegen from \"escodegen\";\nimport * as ESTree from \"estree\";\n\nimport { checkTime } from \"../const/ast\";\n\nconst esprima = require(\"esprima\");\n\nexport function viewCode(code: string): string {\n  return code\n    .split(\"\\n\")\n    .filter((_, i, arr) => i !== 0 && i !== arr.length - 1)\n    .map((line) => line.slice(2))\n    .join(\"\\n\");\n}\n\nexport function getByteLen(s: string): number {\n  // 関数部分を除去\n  s = s\n    .replace(/\\r/g, \"\")\n    .replace(/^.+?{|}\\n*?$/g, \"\")\n    .replace(/^\\n+|\\n+$/g, \"\");\n\n  // 全角2文字でバイト数取得\n  var len = 0;\n  for (var i = 0; i < s.length; i++) {\n    len += s.charCodeAt(i) > 255 ? 2 : 1;\n  }\n  return len;\n}\n\nfunction attachInfiniteLoopChecker(code: string, timeLimit: number): string {\n  const startFunc = \"function __check() {\\n\";\n  const startTimeMeasurement = \"const __start = performance.now();\\n\";\n  const endFunc = \"\\n}\";\n  const funcString = startFunc + startTimeMeasurement + code + endFunc;\n  // console.log(funcString);\n\n  const ast = esprima.parseScript(funcString);\n  const attached = estraverse.replace(ast, {\n    enter(node) {\n      if (node.type === \"ForStatement\") {\n        const blockStatement = node.body as ESTree.BlockStatement;\n        return {\n          ...node,\n          body: {\n            ...blockStatement,\n            body: [checkTime(timeLimit), ...blockStatement.body],\n          },\n        };\n      }\n      return node;\n    },\n  });\n  const attachedString = escodegen\n    .generate(attached, { format: { indent: { style: \"  \" } } })\n    .slice(startFunc.length, -endFunc.length);\n  // console.log(attachedString);\n\n  return attachedString;\n}\n\ntype ExecCodeResult = {\n  status: \"success\" | \"error\";\n  body: string;\n};\n\ntype ExecCodeOptions = {\n  timeLimit: number;\n};\n\nexport function execCode(\n  code: string,\n  args: any[],\n  options: ExecCodeOptions\n): ExecCodeResult {\n  const { timeLimit } = options;\n  try {\n    // eslint-disable-next-line\n    const body = Function(attachInfiniteLoopChecker(code, timeLimit))(args);\n    return { status: \"success\", body };\n  } catch (error) {\n    console.error(String(error));\n    return { status: \"error\", body: String(error) };\n  }\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  withStyles,\n} from \"@material-ui/core/styles\";\nimport { lightGreen } from \"@material-ui/core/colors\";\n\nimport { viewCode, execCode, getByteLen } from \"./func/util\";\nimport { Page } from \"./routes\";\nimport { Checkbox, FormControlLabel, Grow } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    inputRoot: {},\n    correct: {\n      \"& .MuiOutlinedInput-root\": {\n        \"& fieldset\": {\n          borderColor: lightGreen.A400,\n        },\n      },\n    },\n  })\n);\n\nconst CssTextField = withStyles({\n  root: {\n    \"& .MuiOutlinedInput-multiline\": {\n      paddingBottom: 48.5,\n    },\n  },\n})(TextField);\n\nfunction BoxBelowTextfield(props: { children: React.ReactNode }) {\n  return (\n    <Box\n      position=\"absolute\"\n      width=\"100%\"\n      height={30}\n      bottom={0}\n      left={0}\n      px={1}\n      pt={0.5}\n      bgcolor=\"lightGray\"\n      borderRadius=\"0 0 4px 4px\"\n      display=\"flex\"\n      justifyContent=\"flex-end\"\n    >\n      {props.children}\n    </Box>\n  );\n}\n\ntype Props = {\n  page: Page;\n};\n\ntype PlayGroundSettings = {\n  fps: number | \"Disable time refresh\";\n  timeLimit: number;\n};\n\nconst defaultPlayGroundSettings: PlayGroundSettings = {\n  fps: 10,\n  timeLimit: 200,\n};\n\nexport default function PlayGround(props: Props) {\n  const classes = useStyles();\n  const {\n    page: { init, origin },\n  } = props;\n\n  const [{ fps, timeLimit }, setSettings] = useState(defaultPlayGroundSettings);\n\n  const [code, setCode] = useState(viewCode(init));\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setCode(e.target.value);\n\n  const [, setNow] = useState(new Date());\n  useEffect(() => {\n    fps !== \"Disable time refresh\" && console.log(1000 / fps);\n    const timer =\n      fps !== \"Disable time refresh\"\n        ? window.setInterval(() => setNow(new Date()), 1000 / fps)\n        : -1;\n    return () => {\n      if (timer !== -1) {\n        window.clearInterval(timer);\n      }\n    };\n  }, [fps]);\n\n  const { status, body } = execCode(code, [], { timeLimit });\n  const isValid = status === \"success\";\n  const isCorrect = body === origin();\n  const len = getByteLen(code);\n\n  const checkbox = (\n    <Checkbox\n      checked={fps === \"Disable time refresh\"}\n      onChange={(e, checked) =>\n        setSettings({\n          fps: checked ? \"Disable time refresh\" : defaultPlayGroundSettings.fps,\n          timeLimit,\n        })\n      }\n      name=\"checkedA\"\n    />\n  );\n\n  return (\n    <Box p={2}>\n      <Box display=\"flex\" flexDirection=\"row\" mb={2}>\n        <Box>\n          <TextField\n            label=\"Time Limit\"\n            type=\"number\"\n            variant=\"standard\"\n            style={{ width: 100 }}\n            inputProps={{ style: { textAlign: \"right\" } }}\n            value={timeLimit}\n            onChange={(e) =>\n              setSettings({ fps, timeLimit: Number(e.target.value) })\n            }\n          />\n        </Box>\n        <Box ml={5}>\n          <FormControlLabel control={checkbox} label=\"Disable time refresh\" />\n        </Box>\n        <Grow in={fps !== \"Disable time refresh\"}>\n          <Box ml={1}>\n            <TextField\n              label=\"FPS\"\n              type=\"number\"\n              variant=\"standard\"\n              style={{ width: 100 }}\n              inputProps={{ style: { textAlign: \"right\" } }}\n              value={fps}\n              onChange={(e) =>\n                setSettings({ fps: Number(e.target.value), timeLimit })\n              }\n            />\n          </Box>\n        </Grow>\n      </Box>\n      <Grid container spacing={2}>\n        <Grid item xs={12} lg={6}>\n          <div style={{ position: \"relative\" }}>\n            <CssTextField\n              value={code}\n              onChange={handleChange}\n              rows={32}\n              multiline\n              fullWidth\n              inputProps={{ spellCheck: \"false\" }}\n              error={!isValid}\n            />\n            <BoxBelowTextfield>\n              <Typography align=\"right\">line: {len}</Typography>\n            </BoxBelowTextfield>\n          </div>\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <div style={{ position: \"relative\" }}>\n            <CssTextField\n              className={isCorrect ? classes.correct : undefined}\n              value={body}\n              rows={32}\n              multiline\n              fullWidth\n            />\n            <BoxBelowTextfield>\n              {isCorrect && <Typography align=\"right\">Correct</Typography>}\n            </BoxBelowTextfield>\n          </div>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import { OverridableComponent } from \"@material-ui/core/OverridableComponent\";\nimport { SvgIconTypeMap } from \"@material-ui/core/SvgIcon\";\nimport CircleIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport DigitalClockIcon from \"@material-ui/icons/Looks3\";\nimport * as CircleCode from \"./codes/circle-code\";\nimport * as DigitalClock from \"./codes/digital-clock-code\";\n\nexport type PageName = \"/円を描こう\" | \"/デジタル時計を描こう\";\n\nexport type Page = {\n  page: PageName;\n  label: string;\n  icon: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>;\n  init: string;\n  origin: Function;\n};\n\nexport const pages: Page[] = [\n  {\n    page: \"/円を描こう\",\n    label: \"円を描こう\",\n    icon: CircleIcon,\n    init: CircleCode.initial,\n    origin: CircleCode.original,\n  },\n  {\n    page: \"/デジタル時計を描こう\",\n    label: \"デジタル時計\",\n    icon: DigitalClockIcon,\n    init: DigitalClock.initial,\n    origin: DigitalClock.original,\n  },\n];\n// export const digitalClockPage: Page = { page: 'デジタル時計を描こう', icon: DigitalClockIcon };\n","export const initial = `function initialCode() {\n  var res = \"\";\n  var w = 60;\n  var h = 30;\n  var sz = 24;\n\n  for (var y = 0; y < h; y++) {\n    for (var x = 0; x < w; x++) {\n      var dstnc = Math.sqrt(\n        Math.pow(w / 2 - x, 2) + Math.pow((h / 2 - y) * 2, 2)\n      );\n      if (dstnc < sz) {\n        res += \"*\";\n      } else {\n        res += \"-\";\n      }\n    }\n    res += \"\\\\n\";\n  }\n\n  return res;\n}`;\n\nexport function original() {\n  // 変数の初期化\n  var res = \"\";\n  var w = 60;\n  var h = 30;\n  var sz = 24;\n\n  // 処理\n  for (var y = 0; y < h; y++) {\n    for (var x = 0; x < w; x++) {\n      var dstnc = Math.sqrt(\n        Math.pow(w / 2 - x, 2) + Math.pow((h / 2 - y) * 2, 2)\n      );\n      if (dstnc < sz) {\n        res += \"*\";\n      } else {\n        res += \"-\";\n      }\n    }\n    res += \"\\n\";\n  }\n\n  // 結果を戻して終了\n  return res;\n}\n","export const initial = `function initialCode() {\n  const now = new Date();\n\n  // 結果を戻して終了\n  return now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds();\n}`;\n\nexport function original() {\n  const now = new Date();\n\n  // 結果を戻して終了\n  return now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds();\n}\n","import React from \"react\";\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { pages } from \"./routes\";\n\n\ninterface ListItemLinkProps {\n  icon?: React.ReactElement;\n  primary: string;\n  to: string;\n}\n\nfunction ListItemLink(props: ListItemLinkProps) {\n  const { icon, primary, to } = props;\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\n        <RouterLink to={to} ref={ref} {...itemProps} />\n      )),\n    [to],\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nexport default function LeftMenu() {\n  return (\n    <List>\n      {pages.map((p) => {\n        const Icon = p.icon;\n        return (\n          <ListItemLink key={p.page} to={p.page} icon={<Icon />} primary={p.label} />\n        );\n      })}\n    </List>\n  );\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  makeStyles,\n  useTheme,\n  Theme,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport PlayGround from \"./PlayGround\";\nimport LeftMenu from \"./LeftMenu\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { pages } from \"./routes\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    drawer: {\n      [theme.breakpoints.up(\"md\")]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    appBar: {\n      [theme.breakpoints.up(\"md\")]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up(\"md\")]: {\n        display: \"none\",\n      },\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(1),\n    },\n  })\n);\n\nexport default function App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <LeftMenu />\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            JS Playground for CodeGolf\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden mdUp implementation=\"css\">\n          <Drawer\n            variant=\"temporary\"\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden smDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n          {pages.map((p) => (\n            <Route key={p.page} path={p.page}>\n              <PlayGround page={p} />\n            </Route>\n          ))}\n\n          <Redirect to={pages[0].page} />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n","import red from \"@material-ui/core/colors/red\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: ['\"Courier New\"', \"Monospace\"].join(\",\"),\n  },\n  palette: {\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n  props: {\n    MuiTextField: {\n      variant: \"outlined\",\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport App from \"./App\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </BrowserRouter>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}