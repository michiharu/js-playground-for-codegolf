{"version":3,"sources":["App.tsx","func/code.ts","func/util.ts","theme.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","inputRoot","correct","borderColor","lightGreen","A400","CssTextField","withStyles","root","paddingBottom","TextField","App","classes","trigger","useScrollTrigger","useState","split","filter","_","i","arr","length","map","line","slice","join","code","setCode","isValid","Function","error","isValidCode","res","execCode","isCorrect","y","x","Math","sqrt","pow","w","h","originalCode","len","s","replace","charCodeAt","getByteLen","Slide","appear","direction","in","AppBar","position","Toolbar","Typography","variant","color","noWrap","Box","p","Grid","container","spacing","item","xs","lg","style","value","onChange","event","target","rows","multiline","fullWidth","width","height","bottom","left","px","pt","bgcolor","borderRadius","display","justifyContent","align","className","undefined","createMuiTheme","typography","fontFamily","palette","primary","main","secondary","red","background","default","props","MuiTextField","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.79c9ba88.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { lightGreen } from \"@material-ui/core/colors\";\n\nimport { viewCode, isValidCode, execCode, getByteLen } from \"./func/util\";\nimport { originalCode } from \"./func/code\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  withStyles,\n} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    inputRoot: {},\n    correct: {\n      \"& .MuiOutlinedInput-root\": {\n        \"& fieldset\": {\n          borderColor: lightGreen.A400,\n        },\n      },\n    },\n  })\n);\n\nconst CssTextField = withStyles({\n  root: {\n    \"& .MuiOutlinedInput-multiline\": {\n      paddingBottom: 48.5,\n    },\n  },\n})(TextField);\n\nexport default function App() {\n  const classes = useStyles();\n  const trigger = useScrollTrigger();\n\n  const [code, setCode] = useState(viewCode());\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCode(event.target.value);\n  };\n\n  const isValid = isValidCode(code);\n  const res = isValid ? execCode(code) : \"\";\n  const isCorrect = res === originalCode();\n  const len = getByteLen(code);\n\n  return (\n    <>\n      <Slide appear={false} direction=\"down\" in={!trigger}>\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              JS Playground for CodeGolf\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Slide>\n\n      <main>\n        <Box p={2}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} lg={6}>\n              <div style={{ position: \"relative\" }}>\n                <CssTextField\n                  value={code}\n                  onChange={handleChange}\n                  rows={32}\n                  multiline\n                  fullWidth\n                  error={!isValid}\n                />\n                <Box\n                  position=\"absolute\"\n                  width=\"100%\"\n                  height={30}\n                  bottom={0}\n                  left={0}\n                  px={1}\n                  pt={0.5}\n                  bgcolor=\"lightGray\"\n                  borderRadius=\"0 0 4px 4px\"\n                  display=\"flex\"\n                  justifyContent=\"flex-end\"\n                >\n                  <Typography align=\"right\">line: {len}</Typography>\n                </Box>\n              </div>\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <div style={{ position: \"relative\" }}>\n                <CssTextField\n                  className={isCorrect ? classes.correct : undefined}\n                  value={res}\n                  rows={32}\n                  multiline\n                  fullWidth\n                />\n                <Box\n                  position=\"absolute\"\n                  width=\"100%\"\n                  height={30}\n                  bottom={0}\n                  left={0}\n                  px={1}\n                  pt={0.5}\n                  bgcolor=\"lightGray\"\n                  borderRadius=\"0 0 4px 4px\"\n                  display=\"flex\"\n                  justifyContent=\"flex-end\"\n                >\n                  {isCorrect && <Typography align=\"right\">Correct</Typography>}\n                </Box>\n              </div>\n            </Grid>\n          </Grid>\n        </Box>\n      </main>\n    </>\n  );\n}\n","export const initialCode = `function initialCode() {\r\n  var res = \"\";\r\n  var w = 60;\r\n  var h = 30;\r\n  for (var y = 0; y < h; y++) {\r\n    for (var x = 0; x < w; x++) {\r\n      res += \"-\";\r\n    }\r\n    res += \"\\\\n\";\r\n  }\r\n  return res;\r\n}`;\r\n\r\nexport function originalCode() {\r\n  // 変数の初期化\r\n  var res = \"\";\r\n  var w = 60;\r\n  var h = 30;\r\n  var sz = 24;\r\n\r\n  // 処理\r\n  for (var y = 0; y < h; y++) {\r\n    for (var x = 0; x < w; x++) {\r\n      var dstnc = Math.sqrt(\r\n        Math.pow(w / 2 - x, 2) + Math.pow((h / 2 - y) * 2, 2)\r\n      );\r\n      if (dstnc < sz) {\r\n        res += \"*\";\r\n      } else {\r\n        res += \"-\";\r\n      }\r\n    }\r\n    res += \"\\n\";\r\n  }\r\n\r\n  // 結果を戻して終了\r\n  return res;\r\n}\r\n","import { initialCode } from \"./code\";\n\nexport function viewCode(): string {\n  return initialCode\n    .split(\"\\n\")\n    .filter((_, i, arr) => i !== 0 && i !== arr.length - 1)\n    .map((line) => line.slice(2))\n    .join(\"\\n\");\n}\n\nexport function getByteLen(s: string): number {\n  // 関数部分を除去\n  s = s\n    .replace(/\\r/g, \"\")\n    .replace(/^.+?{|}\\n*?$/g, \"\")\n    .replace(/^\\n+|\\n+$/g, \"\");\n\n  // 全角2文字でバイト数取得\n  var len = 0;\n  for (var i = 0; i < s.length; i++) {\n    len += s.charCodeAt(i) > 255 ? 2 : 1;\n  }\n  return len;\n}\n\nexport function isValidCode(code: string): boolean {\n  try {\n    // eslint-disable-next-line\n    Function(code);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport function execCode(code: string): string {\n  // eslint-disable-next-line\n  return Function(code)();\n}\n","import red from \"@material-ui/core/colors/red\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: ['\"Courier New\"', \"Monospace\"].join(\",\"),\n  },\n  palette: {\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n  props: {\n    MuiTextField: {\n      variant: \"outlined\",\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}